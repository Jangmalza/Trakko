generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id
  displayName  String?
  email        String?
  initialSeed  Decimal?    @db.Decimal(18, 2)
  baseCurrency String      @default("KRW")
  traderType   TraderType  @default(KR_STOCK)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  preferences  Preference?
  trades       Trade[]
  goals        PerformanceGoal[]
  role         UserRole    @default(USER)
  subscriptionTier SubscriptionTier @default(FREE)
  announcements Announcement[]
}

model Preference {
  userId   String @id
  currency String
  locale   String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Trade {
  id         String   @id @default(cuid())
  userId     String
  ticker     String
  profitLoss Decimal  @db.Decimal(18, 2)
  rationale  String?  @db.Text
  entryRationale String? @db.Text
  exitRationale  String? @db.Text
  tradeDate  DateTime
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PerformanceGoal {
  id           String   @id @default(cuid())
  userId       String
  targetYear   Int
  targetMonth  Int      @default(0)
  targetAmount Decimal @db.Decimal(18, 2)
  currency     String
  period       GoalPeriod @default(MONTHLY)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, period, targetYear, targetMonth])
}

enum UserRole {
  USER
  ADMIN
}

enum SubscriptionTier {
  FREE
  PRO
}

enum TraderType {
  CRYPTO
  US_STOCK
  KR_STOCK
}

enum AnnouncementStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model Announcement {
  id          String             @id @default(cuid())
  title       String
  content     String             @db.Text
  status      AnnouncementStatus @default(DRAFT)
  publishedAt DateTime?
  expiresAt   DateTime?
  authorId    String?
  author      User?              @relation(fields: [authorId], references: [id], onDelete: SetNull)
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
}

enum GoalPeriod {
  MONTHLY
  ANNUAL
}
